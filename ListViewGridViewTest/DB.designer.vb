'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class DBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertrevenue_forecast(instance As revenue_forecast)
    End Sub
  Partial Private Sub Updaterevenue_forecast(instance As revenue_forecast)
    End Sub
  Partial Private Sub Deleterevenue_forecast(instance As revenue_forecast)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property revenue_forecasts() As System.Data.Linq.Table(Of revenue_forecast)
		Get
			Return Me.GetTable(Of revenue_forecast)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.v_esdisp_revenue_forecast")>  _
Partial Public Class revenue_forecast
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _psl As String
	
	Private _rec_id As Integer
	
	Private _disp_id As System.Nullable(Of Integer)
	
	Private _formatted_disp_id As String
	
	Private _revenue_year As Integer
	
	Private _revenue_month As Integer
	
	Private _status As System.Nullable(Of Short)
	
	Private _status_desc As String
	
	Private _dist_id As Integer
	
	Private _oilcomp_id As String
	
	Private _well_name As String
	
	Private _service_list As String
	
	Private _sales_rep_employee_id As String
	
	Private _dispatch_offline_flag As Boolean
	
	Private _critical_job_flag As Boolean
	
	Private _job_approved_state As System.Nullable(Of Byte)
	
	Private _revenue As System.Nullable(Of Decimal)
	
	Private _optional_quote_revenue As System.Nullable(Of Decimal)
	
	Private _total_fso_count As System.Nullable(Of Integer)
	
	Private _exported_fso_count As System.Nullable(Of Integer)
	
	Private _total_quote_count As System.Nullable(Of Integer)
	
	Private _exported_quote_count As System.Nullable(Of Integer)
	
	Private _opportunity_revenue As System.Nullable(Of Decimal)
	
	Private _opportunity_probability As System.Nullable(Of Decimal)
	
	Private _risk_revenue As System.Nullable(Of Decimal)
	
	Private _risk_probability As System.Nullable(Of Decimal)
	
	Private _comment As String
	
	Private _main_quote_count As System.Nullable(Of Integer)
	
	Private _original_disp_revenue As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpslChanging(value As String)
    End Sub
    Partial Private Sub OnpslChanged()
    End Sub
    Partial Private Sub Onrec_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onrec_idChanged()
    End Sub
    Partial Private Sub Ondisp_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondisp_idChanged()
    End Sub
    Partial Private Sub Onformatted_disp_idChanging(value As String)
    End Sub
    Partial Private Sub Onformatted_disp_idChanged()
    End Sub
    Partial Private Sub Onrevenue_yearChanging(value As Integer)
    End Sub
    Partial Private Sub Onrevenue_yearChanged()
    End Sub
    Partial Private Sub Onrevenue_monthChanging(value As Integer)
    End Sub
    Partial Private Sub Onrevenue_monthChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub Onstatus_descChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_descChanged()
    End Sub
    Partial Private Sub Ondist_idChanging(value As Integer)
    End Sub
    Partial Private Sub Ondist_idChanged()
    End Sub
    Partial Private Sub Onoilcomp_idChanging(value As String)
    End Sub
    Partial Private Sub Onoilcomp_idChanged()
    End Sub
    Partial Private Sub Onwell_nameChanging(value As String)
    End Sub
    Partial Private Sub Onwell_nameChanged()
    End Sub
    Partial Private Sub Onservice_listChanging(value As String)
    End Sub
    Partial Private Sub Onservice_listChanged()
    End Sub
    Partial Private Sub Onsales_rep_employee_idChanging(value As String)
    End Sub
    Partial Private Sub Onsales_rep_employee_idChanged()
    End Sub
    Partial Private Sub Ondispatch_offline_flagChanging(value As Boolean)
    End Sub
    Partial Private Sub Ondispatch_offline_flagChanged()
    End Sub
    Partial Private Sub Oncritical_job_flagChanging(value As Boolean)
    End Sub
    Partial Private Sub Oncritical_job_flagChanged()
    End Sub
    Partial Private Sub Onjob_approved_stateChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub Onjob_approved_stateChanged()
    End Sub
    Partial Private Sub OnrevenueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnrevenueChanged()
    End Sub
    Partial Private Sub Onoptional_revenueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onoptional_revenueChanged()
    End Sub
    Partial Private Sub Ontotal_fso_countChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontotal_fso_countChanged()
    End Sub
    Partial Private Sub Onexported_fso_countChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onexported_fso_countChanged()
    End Sub
    Partial Private Sub Ontotal_quote_countChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontotal_quote_countChanged()
    End Sub
    Partial Private Sub Onexported_quote_countChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onexported_quote_countChanged()
    End Sub
    Partial Private Sub Onopportunity_revenueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopportunity_revenueChanged()
    End Sub
    Partial Private Sub Onopportunity_probabilityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopportunity_probabilityChanged()
    End Sub
    Partial Private Sub Onrisk_revenueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrisk_revenueChanged()
    End Sub
    Partial Private Sub Onrisk_probabilityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrisk_probabilityChanged()
    End Sub
    Partial Private Sub OncommentChanging(value As String)
    End Sub
    Partial Private Sub OncommentChanged()
    End Sub
    Partial Private Sub Onmain_quote_countChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmain_quote_countChanged()
    End Sub
    Partial Private Sub Onoriginal_disp_revenueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onoriginal_disp_revenueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_psl", DbType:="Char(2) ", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property psl() As String
		Get
			Return Me._psl
		End Get
		Set
			If (String.Equals(Me._psl, value) = false) Then
				Me.OnpslChanging(value)
				Me.SendPropertyChanging
				Me._psl = value
				Me.SendPropertyChanged("psl")
				Me.OnpslChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rec_id", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property rec_id() As Integer
		Get
			Return Me._rec_id
		End Get
		Set
			If ((Me._rec_id = value)  _
						= false) Then
				Me.Onrec_idChanging(value)
				Me.SendPropertyChanging
				Me._rec_id = value
				Me.SendPropertyChanged("rec_id")
				Me.Onrec_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_disp_id", DbType:="Int")>  _
	Public Property disp_id() As System.Nullable(Of Integer)
		Get
			Return Me._disp_id
		End Get
		Set
			If (Me._disp_id.Equals(value) = false) Then
				Me.Ondisp_idChanging(value)
				Me.SendPropertyChanging
				Me._disp_id = value
				Me.SendPropertyChanged("disp_id")
				Me.Ondisp_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formatted_disp_id", CanBeNull:=false)>  _
	Public Property formatted_disp_id() As String
		Get
			Return Me._formatted_disp_id
		End Get
		Set
			If (String.Equals(Me._formatted_disp_id, value) = false) Then
				Me.Onformatted_disp_idChanging(value)
				Me.SendPropertyChanging
				Me._formatted_disp_id = value
				Me.SendPropertyChanged("formatted_disp_id")
				Me.Onformatted_disp_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue_year", DbType:="int")>  _
	Public Property revenue_year() As Integer
		Get
			Return Me._revenue_year
		End Get
		Set
			If ((Me._revenue_year = value)  _
						= false) Then
				Me.Onrevenue_yearChanging(value)
				Me.SendPropertyChanging
				Me._revenue_year = value
				Me.SendPropertyChanged("revenue_year")
				Me.Onrevenue_yearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue_month", DbType:="int")>  _
	Public Property revenue_month() As Integer
		Get
			Return Me._revenue_month
		End Get
		Set
			If ((Me._revenue_month = value)  _
						= false) Then
				Me.Onrevenue_monthChanging(value)
				Me.SendPropertyChanging
				Me._revenue_month = value
				Me.SendPropertyChanged("revenue_month")
				Me.Onrevenue_monthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="smallint")>  _
	Public Property status() As System.Nullable(Of Short)
		Get
			Return Me._status
		End Get
		Set
			If (Me._status.Equals(value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_desc", CanBeNull:=false)>  _
	Public Property status_desc() As String
		Get
			Return Me._status_desc
		End Get
		Set
			If (String.Equals(Me._status_desc, value) = false) Then
				Me.Onstatus_descChanging(value)
				Me.SendPropertyChanging
				Me._status_desc = value
				Me.SendPropertyChanged("status_desc")
				Me.Onstatus_descChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dist_id", DbType:="int")>  _
	Public Property dist_id() As Integer
		Get
			Return Me._dist_id
		End Get
		Set
			If ((Me._dist_id = value)  _
						= false) Then
				Me.Ondist_idChanging(value)
				Me.SendPropertyChanging
				Me._dist_id = value
				Me.SendPropertyChanged("dist_id")
				Me.Ondist_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oilcomp_id", CanBeNull:=false)>  _
	Public Property oilcomp_id() As String
		Get
			Return Me._oilcomp_id
		End Get
		Set
			If (String.Equals(Me._oilcomp_id, value) = false) Then
				Me.Onoilcomp_idChanging(value)
				Me.SendPropertyChanging
				Me._oilcomp_id = value
				Me.SendPropertyChanged("oilcomp_id")
				Me.Onoilcomp_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_well_name", CanBeNull:=false)>  _
	Public Property well_name() As String
		Get
			Return Me._well_name
		End Get
		Set
			If (String.Equals(Me._well_name, value) = false) Then
				Me.Onwell_nameChanging(value)
				Me.SendPropertyChanging
				Me._well_name = value
				Me.SendPropertyChanged("well_name")
				Me.Onwell_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_service_list", CanBeNull:=false)>  _
	Public Property service_list() As String
		Get
			Return Me._service_list
		End Get
		Set
			If (String.Equals(Me._service_list, value) = false) Then
				Me.Onservice_listChanging(value)
				Me.SendPropertyChanging
				Me._service_list = value
				Me.SendPropertyChanged("service_list")
				Me.Onservice_listChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sales_rep_employee_id", CanBeNull:=false)>  _
	Public Property sales_rep_employee_id() As String
		Get
			Return Me._sales_rep_employee_id
		End Get
		Set
			If (String.Equals(Me._sales_rep_employee_id, value) = false) Then
				Me.Onsales_rep_employee_idChanging(value)
				Me.SendPropertyChanging
				Me._sales_rep_employee_id = value
				Me.SendPropertyChanged("sales_rep_employee_id")
				Me.Onsales_rep_employee_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dispatch_offline_flag", DbType:="bit")>  _
	Public Property dispatch_offline_flag() As Boolean
		Get
			Return Me._dispatch_offline_flag
		End Get
		Set
			If ((Me._dispatch_offline_flag = value)  _
						= false) Then
				Me.Ondispatch_offline_flagChanging(value)
				Me.SendPropertyChanging
				Me._dispatch_offline_flag = value
				Me.SendPropertyChanged("dispatch_offline_flag")
				Me.Ondispatch_offline_flagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_critical_job_flag", DbType:="bit")>  _
	Public Property critical_job_flag() As Boolean
		Get
			Return Me._critical_job_flag
		End Get
		Set
			If ((Me._critical_job_flag = value)  _
						= false) Then
				Me.Oncritical_job_flagChanging(value)
				Me.SendPropertyChanging
				Me._critical_job_flag = value
				Me.SendPropertyChanged("critical_job_flag")
				Me.Oncritical_job_flagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_job_approved_state", DbType:="tinyint")>  _
	Public Property job_approved_state() As System.Nullable(Of Byte)
		Get
			Return Me._job_approved_state
		End Get
		Set
			If (Me._job_approved_state.Equals(value) = false) Then
				Me.Onjob_approved_stateChanging(value)
				Me.SendPropertyChanging
				Me._job_approved_state = value
				Me.SendPropertyChanged("job_approved_state")
				Me.Onjob_approved_stateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue", DbType:="decimal(15,2)")>  _
	Public Property revenue() As System.Nullable(Of Decimal)
		Get
			Return Me._revenue
		End Get
		Set
			If (Me._revenue.Equals(value) = false) Then
				Me.OnrevenueChanging(value)
				Me.SendPropertyChanging
				Me._revenue = value
				Me.SendPropertyChanged("revenue")
				Me.OnrevenueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_optional_quote_revenue", DbType:="decimal(15,2)")>  _
	Public Property optional_revenue() As System.Nullable(Of Decimal)
		Get
			Return Me._optional_quote_revenue
		End Get
		Set
			If (Me._optional_quote_revenue.Equals(value) = false) Then
				Me.Onoptional_revenueChanging(value)
				Me.SendPropertyChanging
				Me._optional_quote_revenue = value
				Me.SendPropertyChanged("optional_revenue")
				Me.Onoptional_revenueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_total_fso_count", DbType:="int")>  _
	Public Property total_fso_count() As System.Nullable(Of Integer)
		Get
			Return Me._total_fso_count
		End Get
		Set
			If (Me._total_fso_count.Equals(value) = false) Then
				Me.Ontotal_fso_countChanging(value)
				Me.SendPropertyChanging
				Me._total_fso_count = value
				Me.SendPropertyChanged("total_fso_count")
				Me.Ontotal_fso_countChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exported_fso_count", DbType:="int")>  _
	Public Property exported_fso_count() As System.Nullable(Of Integer)
		Get
			Return Me._exported_fso_count
		End Get
		Set
			If (Me._exported_fso_count.Equals(value) = false) Then
				Me.Onexported_fso_countChanging(value)
				Me.SendPropertyChanging
				Me._exported_fso_count = value
				Me.SendPropertyChanged("exported_fso_count")
				Me.Onexported_fso_countChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_total_quote_count", DbType:="int")>  _
	Public Property total_quote_count() As System.Nullable(Of Integer)
		Get
			Return Me._total_quote_count
		End Get
		Set
			If (Me._total_quote_count.Equals(value) = false) Then
				Me.Ontotal_quote_countChanging(value)
				Me.SendPropertyChanging
				Me._total_quote_count = value
				Me.SendPropertyChanged("total_quote_count")
				Me.Ontotal_quote_countChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exported_quote_count", DbType:="int")>  _
	Public Property exported_quote_count() As System.Nullable(Of Integer)
		Get
			Return Me._exported_quote_count
		End Get
		Set
			If (Me._exported_quote_count.Equals(value) = false) Then
				Me.Onexported_quote_countChanging(value)
				Me.SendPropertyChanging
				Me._exported_quote_count = value
				Me.SendPropertyChanged("exported_quote_count")
				Me.Onexported_quote_countChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opportunity_revenue", DbType:="decimal(15, 2)")>  _
	Public Property opportunity_revenue() As System.Nullable(Of Decimal)
		Get
			Return Me._opportunity_revenue
		End Get
		Set
			If (Me._opportunity_revenue.Equals(value) = false) Then
				Me.Onopportunity_revenueChanging(value)
				Me.SendPropertyChanging
				Me._opportunity_revenue = value
				Me.SendPropertyChanged("opportunity_revenue")
				Me.Onopportunity_revenueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opportunity_probability", DbType:="decimal(5,2)")>  _
	Public Property opportunity_probability() As System.Nullable(Of Decimal)
		Get
			Return Me._opportunity_probability
		End Get
		Set
			If (Me._opportunity_probability.Equals(value) = false) Then
				Me.Onopportunity_probabilityChanging(value)
				Me.SendPropertyChanging
				Me._opportunity_probability = value
				Me.SendPropertyChanged("opportunity_probability")
				Me.Onopportunity_probabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_risk_revenue", DbType:="decimal(15,2)")>  _
	Public Property risk_revenue() As System.Nullable(Of Decimal)
		Get
			Return Me._risk_revenue
		End Get
		Set
			If (Me._risk_revenue.Equals(value) = false) Then
				Me.Onrisk_revenueChanging(value)
				Me.SendPropertyChanging
				Me._risk_revenue = value
				Me.SendPropertyChanged("risk_revenue")
				Me.Onrisk_revenueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_risk_probability", DbType:="decimal(5,2)")>  _
	Public Property risk_probability() As System.Nullable(Of Decimal)
		Get
			Return Me._risk_probability
		End Get
		Set
			If (Me._risk_probability.Equals(value) = false) Then
				Me.Onrisk_probabilityChanging(value)
				Me.SendPropertyChanging
				Me._risk_probability = value
				Me.SendPropertyChanged("risk_probability")
				Me.Onrisk_probabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_comment", CanBeNull:=false)>  _
	Public Property comment() As String
		Get
			Return Me._comment
		End Get
		Set
			If (String.Equals(Me._comment, value) = false) Then
				Me.OncommentChanging(value)
				Me.SendPropertyChanging
				Me._comment = value
				Me.SendPropertyChanged("comment")
				Me.OncommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_main_quote_count", DbType:="int")>  _
	Public Property main_quote_count() As System.Nullable(Of Integer)
		Get
			Return Me._main_quote_count
		End Get
		Set
			If (Me._main_quote_count.Equals(value) = false) Then
				Me.Onmain_quote_countChanging(value)
				Me.SendPropertyChanging
				Me._main_quote_count = value
				Me.SendPropertyChanged("main_quote_count")
				Me.Onmain_quote_countChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_original_disp_revenue", DbType:="decimal(15, 2)")>  _
	Public Property original_disp_revenue() As System.Nullable(Of Decimal)
		Get
			Return Me._original_disp_revenue
		End Get
		Set
			If (Me._original_disp_revenue.Equals(value) = false) Then
				Me.Onoriginal_disp_revenueChanging(value)
				Me.SendPropertyChanging
				Me._original_disp_revenue = value
				Me.SendPropertyChanged("original_disp_revenue")
				Me.Onoriginal_disp_revenueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
